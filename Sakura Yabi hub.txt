local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Yabi Hub",
    SubTitle = "by GUMIBOA",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- AUTO FAME FUNCTIONALITY
local autoFameToggle = Tabs.Main:AddToggle("AutoFameToggle", { Title = "Auto Fame", Default = false })
local autoFameCoroutine

autoFameToggle:OnChanged(function()
    _G.AutoFame = autoFameToggle.Value
    if _G.AutoFame then
        Fluent:Notify({
            Title = "Auto Fame",
            Content = "Auto Fame started.",
            Duration = 5
        })

        autoFameCoroutine = coroutine.create(function()
            local targetMonsters = {"Menos", "Frog Hollow", "Fishbone", "Paper Curse", "Adjuchas", "Spider Curse", "Contorted Curse"}

            while _G.AutoFame do
                task.wait()
                pcall(function()
                    for _, v in pairs(workspace.Living:GetDescendants()) do
                        if table.find(targetMonsters, v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                            if v.Humanoid.Health > 0 then
                                repeat
                                    task.wait()
                                    -- วาปไปที่มอนสเตอร์
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, -1)
                                until not _G.AutoFame or v.Humanoid.Health <= 0
                            end
                        end
                    end
                end)
            end
        end)

        coroutine.resume(autoFameCoroutine)
    else
        Fluent:Notify({
            Title = "Auto Fame Stopped",
            Content = "Auto Fame has been stopped.",
            Duration = 5
        })
    end
end)

-- AUTO SKILL FUNCTIONALITY
local autoSkillToggle = Tabs.Main:AddToggle("AutoSkillToggle", { Title = "Auto Skill", Default = false })
local autoSkillCoroutine

autoSkillToggle:OnChanged(function()
    _G.AutoSkill = autoSkillToggle.Value
    if _G.AutoSkill then
        Fluent:Notify({
            Title = "Auto Skill",
            Content = "Auto Skill started.",
            Duration = 5
        })

        autoSkillCoroutine = coroutine.create(function()
            while _G.AutoSkill do
                task.wait()
                pcall(function()
                    local remote = game:GetService("ReplicatedStorage"):WaitForChild("ItadoriRemote")
                    remote:WaitForChild("Punch"):FireServer()
                    
                    remote:WaitForChild("Barrage"):FireServer()
                    
                    remote:WaitForChild("Divergent"):FireServer()
                    
                    remote:WaitForChild("BlackFlash"):FireServer()
                    
                    remote:WaitForChild("Slam"):FireServer()
                    
                    remote:WaitForChild("Sense"):FireServer()
                    
                    remote:WaitForChild("Enhance"):FireServer()
                    
                    game:GetService("ReplicatedStorage"):WaitForChild("SkillRemote"):WaitForChild("YutaRemote"):WaitForChild("Domain"):FireServer()
                    
                end)
            end
        end)

        coroutine.resume(autoSkillCoroutine)
    else
        Fluent:Notify({
            Title = "Auto Skill Stopped",
            Content = "Auto Skill has been stopped.",
            Duration = 5
        })
    end
end)

-- AUTO TELEPORT TO BOXES
local autoBoxToggle = Tabs.Main:AddToggle("AutoBoxToggle", { Title = "Auto Teleport Boxes", Default = false })
local autoBoxCoroutine

autoBoxToggle:OnChanged(function()
    _G.AutoBox = autoBoxToggle.Value
    if _G.AutoBox then
        Fluent:Notify({
            Title = "Auto Boxes",
            Content = "Auto teleport to boxes started.",
            Duration = 5
        })

        autoBoxCoroutine = coroutine.create(function()
            local targetNames = {"Box", "Barrel", "Chest"}
            while _G.AutoBox do
                task.wait()
                pcall(function()
                    for _, child in pairs(workspace.Item:GetChildren()) do
                        if table.find(targetNames, child.Name) and child:IsA("BasePart") then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = child.CFrame
                            task.wait(2)
                        end
                    end
                end)
            end
        end)

        coroutine.resume(autoBoxCoroutine)
    else
        Fluent:Notify({
            Title = "Auto Boxes Stopped",
            Content = "Auto teleport to boxes has been stopped.",
            Duration = 5
        })
    end
end)

-- Anti-AFK Functionality
local antiAFKToggle = Tabs.Main:AddToggle("AntiAFKToggle", { Title = "Anti AFK", Default = false })
local antiAFKCoroutine

antiAFKToggle:OnChanged(function()
    _G.AntiAFK = antiAFKToggle.Value
    if _G.AntiAFK then
        Fluent:Notify({
            Title = "Anti AFK",
            Content = "Anti AFK started.",
            Duration = 5
        })

        antiAFKCoroutine = coroutine.create(function()
            while _G.AntiAFK do
                task.wait(300) -- รอ 5 นาที (300 วินาที)
                pcall(function()
                    -- จำลองการเคลื่อนไหวหรือการกดปุ่ม
                    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        humanoid:Move(Vector3.new(math.random(-1, 1), 0, math.random(-1, 1))) -- เคลื่อนไหวไปยังตำแหน่งสุ่มเล็กน้อย
                    end
                end)
            end
        end)

        coroutine.resume(antiAFKCoroutine)
    else
        Fluent:Notify({
            Title = "Anti AFK Stopped",
            Content = "Anti AFK has been stopped.",
            Duration = 5
        })
    end
end)

local autoDullahanToggle = Tabs.Main:AddToggle("AutoDullahanToggle", { Title = "Auto Dullahan", Default = false })
local autoDullahanCoroutine

autoDullahanToggle:OnChanged(function()
    _G.AutoDullahan = autoDullahanToggle.Value
    if _G.AutoDullahan then
        Fluent:Notify({ Title = "Auto Dullahan", Content = "Started attacking Dullahan.", Duration = 5 })
        autoDullahanCoroutine = coroutine.create(function()
            while _G.AutoDullahan do
                task.wait()
                pcall(function()
                    for _, v in pairs(workspace.Living:GetDescendants()) do
                        if v.Name == "Dullahan" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                            if v.Humanoid.Health > 0 then
                                -- หยุด AutoBox และ AutoMob
                                _G.AutoBox = false
                                repeat
                                    task.wait()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
                                until not _G.AutoDullahan or v.Humanoid.Health <= 0
                                -- กลับมาเปิด AutoBox
                                _G.AutoBox = true
                            end
                        end
                    end
                end)
            end
        end)
        coroutine.resume(autoDullahanCoroutine)
    else
        Fluent:Notify({ Title = "Auto Dullahan", Content = "Stopped attacking Dullahan.", Duration = 5 })
    end
end)

-- เริ่มต้นการโจมตี Dullahan
coroutine.wrap(AutoDullahan)()



SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("AutoFarmHub")
SaveManager:SetFolder("AutoFarmHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)

Fluent:Notify({
    Title = "Auto Farm Hub",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
